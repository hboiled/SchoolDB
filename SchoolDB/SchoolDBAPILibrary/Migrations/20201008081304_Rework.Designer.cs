// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolDBAPI.Library.DataAccess;

namespace SchoolDBAPI.Library.Migrations
{
    [DbContext(typeof(SchoolDBContext))]
    [Migration("20201008081304_Rework")]
    partial class Rework
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeacherId = 1,
                            Title = "Maths 101"
                        },
                        new
                        {
                            Id = 2,
                            TeacherId = 2,
                            Title = "Science 401"
                        },
                        new
                        {
                            Id = 3,
                            TeacherId = 3,
                            Title = "English 201"
                        },
                        new
                        {
                            Id = 4,
                            TeacherId = 4,
                            Title = "Sports 101"
                        });
                });

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 4,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 6,
                            CourseId = 2,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 7,
                            CourseId = 4,
                            StudentId = 6
                        });
                });

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sam",
                            Grade = 100,
                            LastName = "Lee",
                            StudentId = 203948
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jacey",
                            Grade = 80,
                            LastName = "Feng",
                            StudentId = 102942
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Brandon",
                            Grade = 100,
                            LastName = "Lee",
                            StudentId = 293481
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Sue",
                            Grade = 90,
                            LastName = "Jordan",
                            StudentId = 203941
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "John",
                            Grade = 80,
                            LastName = "Thomas",
                            StudentId = 920341
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Javier",
                            Grade = 80,
                            LastName = "Mcgregor",
                            StudentId = 763343
                        });
                });

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Crowler",
                            LastName = "Starks",
                            Salary = 0m
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Rima",
                            LastName = "Irving",
                            Salary = 0m
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jack",
                            LastName = "Bonilla",
                            Salary = 0m
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Keisha",
                            LastName = "Higgins",
                            Salary = 0m
                        });
                });

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Course", b =>
                {
                    b.HasOne("SchoolDBAPI.Library.Models.People.Teacher", "Teacher")
                        .WithMany("CoursesTaught")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolDBAPI.Library.Models.People.Enrollment", b =>
                {
                    b.HasOne("SchoolDBAPI.Library.Models.People.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolDBAPI.Library.Models.People.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
